generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int                    @id @default(autoincrement())
  name            String
  email           String                 @unique
  password        String
  createdAt       DateTime               @default(now())
  riskScores      RiskScore[]
  sessions        ChatSession[]
  messages        ChatMessage[]
  financeAssessments FinanceAssessment[]
  healthAssessments  HealthAssessment[]
}

model RiskScore {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Tscore    Float
  Financial Float
  Health    Float
  TimeHori  Float
  createdAt DateTime @default(now())
}

model ChatSession {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  title     String        @default("New Chat")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  messages  ChatMessage[]

  @@index([userId, updatedAt(sort: Desc)], name: "idx_user_sessions")
}

model ChatMessage {
  id        Int           @id @default(autoincrement())
  session   ChatSession   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
  user      User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?          // optional: assistant messages don't need a user
  type      ChatRole
  content   String        @db.LongText
  sources   Json?
  createdAt DateTime      @default(now())

  @@index([sessionId, createdAt(sort: Asc)], name: "idx_session_messages")
  @@index([userId], name: "idx_message_user")
  @@index([createdAt], name: "idx_message_createdAt")
}

// New model for Finance Assessment data
model FinanceAssessment {
  id                    Int      @id @default(autoincrement())
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                Int
  
  // Input fields
  age                   Int
  gender                String
  educationLevel        String
  maritalStatus         String
  income                Float
  creditScore           Float
  loanAmount            Float
  loanPurpose           String
  employmentStatus      String
  yearsAtCurrentJob     Int
  paymentHistory        String
  debtToIncomeRatio     Float
  assetsValue           Float
  numberOfDependents    Float
  previousDefaults      Int
  maritalStatusChange   Int
  
  // Prediction result
  riskRating            String?
  
  createdAt             DateTime @default(now())

  @@index([userId], name: "idx_finance_user")
  @@index([createdAt], name: "idx_finance_created")
  @@index([riskRating], name: "idx_finance_risk")
}

// New model for Health Assessment data
model HealthAssessment {
  id                Int      @id @default(autoincrement())
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            Int
  
  // Input fields
  male              Int      // 1 for male, 0 for female
  age               Int
  education         Int      // 1-4 scale
  currentSmoker     Int      // 1 for yes, 0 for no
  cigsPerDay        Float
  bpMeds            Int      // 1 for yes, 0 for no
  prevalentStroke   Int      // 1 for yes, 0 for no
  prevalentHyp      Int      // 1 for yes, 0 for no
  diabetes          Int      // 1 for yes, 0 for no
  totChol           Float    // Total cholesterol
  sysBP             Float    // Systolic blood pressure
  diaBP             Float    // Diastolic blood pressure
  bmi               Float    // Body Mass Index
  heartRate         Float
  glucose           Float
  
  // Prediction results
  tenYearCHD        Int?     // 1 for risk, 0 for no risk
  probability       Float?   // Risk probability
  
  createdAt         DateTime @default(now())

  @@index([userId], name: "idx_health_user")
  @@index([createdAt], name: "idx_health_created")
  @@index([tenYearCHD], name: "idx_health_chd")
}

enum ChatRole {
  user
  assistant
}



